server:
  port: 10086 # 端口
  #port: 10087 # 端口
spring:
  application:
    name: eureka-server # 应用名称，会在Eureka中显示
eureka:
  client:
    register-with-eureka: false # 是否注册自己的信息到EurekaServer，默认是true
    fetch-registry: false # 是否拉取其它服务的信息，默认是true
    #注册表获取间隔秒:如果为true，则会从Eureka Server服务的列表只读备份，然后缓存在本地。并且`每隔30秒`会重新获取并更新数据
    #生产环境中，我们不需要修改这个值;但是为了开发环境下，能够快速得到服务的最新状态，我们可以将其设置小一点。
    registry-fetch-interval-seconds: 5
    service-url: # EurekaServer的地址，现在是自己的地址，如果是集群，需要加上其它Server的地址。
      defaultZone: http://127.0.0.1:${server.port}/eureka
      #defaultZone: http://127.0.0.1:10086/eureka
  #失效剔除和自我保护:它会开启一个定时任务，每隔60秒对所有失效的服务（超过90秒未响应）进行剔除
  #这会对我们开发带来极大的不变，你对服务重启，隔了60秒Eureka才反应过来。开发阶段可以适当调整，比如10S
  server:
    enable-self-preservation: false # 关闭自我保护模式（缺省为打开）
    eviction-interval-timer-in-ms: 1000 # 扫描失效服务的间隔时间（缺省为60*1000ms）